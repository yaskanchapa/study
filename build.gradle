plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
//	id "com.github.node-gradle.node" version "3.5.1"
}

group = 'com.kse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
	compileOnly 'org.projectlombok:lombok'
    implementation 'org.jetbrains:annotations:20.1.0'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.6'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
	runtimeOnly 'mysql:mysql-connector-java:8.0.30'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.0'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation platform('software.amazon.awssdk:bom:2.15.0')
	implementation platform('com.amazonaws:aws-xray-recorder-sdk-bom:2.11.0')
	implementation 'software.amazon.awssdk:s3'
	/* print関連*/
	implementation files('lib/iText-2.1.7.jar')
	implementation files('lib/iTextAsian.jar')
	implementation files('lib/jackson-annotations-2.14.1.jar')
	implementation files('lib/jackson-core-2.14.1.jar')
	implementation files('lib/jackson-databind-2.14.1.jar')
	implementation files('lib/systembase.barcode-1.3.jar')
	implementation files('lib/systembase.core-1.8.jar')
	implementation files('lib/systembase.report.pdf-5.16.jar')
	implementation files('lib/systembase.report-5.16.jar')
	implementation files('lib/zxing.core-3.5.1.jar')
	implementation group: 'net.arnx', name: 'jsonic', version: '1.3.10'

}

//node {
//	npmVersion = '8.19.2'
//	distBaseUrl = 'https://nodejs.org/dist'
//	workDir = file("./src/frontend")
//	npmWorkDir = file("./src/frontend")
//	nodeModulesDir = file("./src/frontend")
//}
//
//task setUp(type: NpmTask){
//	description = "Install Node.js packages"
//	args = ['install']
//	inputs.files file('package.json')
//	outputs.files file('node_modules')
//}
//
//task buildFrontEnd(type: NpmTask, dependsOn:setUp){
//	description = "Build vue.js"
//	args = ['run','build']
//}
//
//processResources.dependsOn buildFrontEnd

//tasks.named('test') {
//	useJUnitPlatform()
//}